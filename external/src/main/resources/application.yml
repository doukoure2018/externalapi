application:
  title: ${APP_TITILE}
  version: ${APP_VERSION}

jwt:
  secret: ${JWT_SECRET}
  public:
    key: classpath:keys/public.pem
  private:
    key: classpath:keys/private.pem

server:
  error:
    path: /user/error
    whitelabel:
      enabled: false
  address: 0.0.0.0
  port: ${CONTAINER_PORT:8090}

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      resolve-lazily: true
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
    password: ${POSTGRES_PASSWORD}
    username: ${POSTGRES_USERNAME}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        globally_quoted_indentifiers: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  sql:
    init:
      mode: never
      continue-on-error: false
  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${EMAIL_ID}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          writetimeout: 5000
          connectiontimeout: 5000
          timeout: 5000
          auth: true
          starttls:
            enable: true
            required: true

  flyway:
    baseline-on-migrate: true

canal:
  login:
    username: ${APP_CANAL_USERNAME}
    password: ${APP_CANAL_PASSWORD}

selenium:
  remote:
    url: ${SELENIUM_REMOTE_URL:}

chrome:
  remote:
    enabled: ${CHROME_REMOTE_ENABLED:false}


orange:
  api:
    oauth:
      url: ${ORANGE_OAUTH_URL}
    sms:
      url: ${ORANGE_OAUTH_URL_SMS}
      balance:
        url: ${ORANGE_BALANCE_URL}
    client:
      credentials: Basic ${ORANGE_CLIENT_CREDENTIALS}
    sender:
      address: ${ORANGE_SENDER}


sms:
  code:
    length: ${CODE_LIMIT:6}
  expiry:
    minutes: ${EXPIRY_MINUTE:10}
  max:
    attempts: ${MAX_ATTEMPT:3}
  rate:
    limit:
      per:
        hour: ${LIMIT_PER_HOUR:3}
  sender:
    name: ${SENDER_NAME}
  primary:
    provider: ${SMS_PRIMARY_PROVIDER}
  fallback:
    enabled: true
  send:
    timeout:
      seconds: 30
  retry:
    attempts: 2

# M�triques et monitoring
management:
  metrics:
    export:
      mobile-sessions:
        enabled: true
        step: 1m

# Configuration de logging sp�cifique
logging:
  level:
    io.canal.dist.service.SMSAuthService: DEBUG
    io.canal.dist.controller.SMSAuthController: DEBUG
    io.canal.dist.job.MobileSessionCleanupJob: INFO

slack:
  credential: ${SLACK_CREDENTIAL}


springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
    deep-linking: true
    persist-authorization: true  # Garde le token JWT après refresh de la page
    display-operation-id: false
    default-models-expand-depth: 1
    default-model-expand-depth: 1
    doc-expansion: none  # none, list, ou full
    filter: true  # Permet de filtrer les endpoints
    show-extensions: true
    show-common-extensions: true
    disable-swagger-default-url: true

  # Informations personnalisées pour l'API
  show-actuator: false  # Ne pas exposer les endpoints actuator dans Swagger

  # Groupes d'API pour organiser les endpoints
  group-configs:
    - group: authentication
      paths-to-match:
        - /api/auth/**
      display-name: Authentication API

    - group: reabonnement
      paths-to-match:
        - /api/reabo/**
      display-name: Réabonnement API

    - group: all
      paths-to-match:
        - /**
      display-name: All APIs

